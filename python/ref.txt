// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © hccode
// profit 
profit = 0.008
loss = 0.016

//
//@version=5
strategy("정희철 발표용 코드", 
 overlay = true, 
 initial_capital = 100000, 
 default_qty_type = strategy.percent_of_equity, 
 default_qty_value = 50,
 process_orders_on_close = true)

ma4 = ta.ema(close, 4)
ma8 = ta.ema(close, 8)
ma30 = ta.ema(close, 30)
ma40 = ta.ema(close, 40)

p_ma4 = plot(ma4, "ma4", color = color.blue)
p_ma8 = plot(ma8, "ma8", color = color.green)
p_ma30 = plot(ma30, "ma30", color = color.red)
p_ma40 = plot(ma40, "ma30", color = color.purple)


fill(p_ma4, p_ma8, color = color.rgb(33, 149, 243, 80))
fill(p_ma8, p_ma30, color = color.rgb(33, 149, 243, 70))
fill(p_ma30, p_ma40, color = color.rgb(33, 149, 243, 60))



// 변동성 돌파전략
length = high[1] - low[1]   
k = input.float(0.5)

newLength = length * k
longTarget = close[1] + newLength
shortTarget = close[1] - newLength

// position == 0 : 포지션 x
// position == 1 : long 
// position == 2 : short
var position  = 0

diffMa40_12 = math.abs(ma40-ma4) // 횡보할 때 포지션 진입하지 않기 위해 횡보 확인
conDiffMa40_12 = 7 // 횡보 시 진입 조건
plot(diffMa40_12, color = color.black)

// 롱 조건 :
// 1. 
// ma4 > ma30 : 주기가 짧은 EMA가 더 위에 있을 때
// close > longTarget : 현재 코인의 가격이 longTarget(변동성 돌파전략으로 구한 타겟)보다 위에 있을 때
// diffMa40_12 > conDiffMa40_12 : 횡보 확인을 위해서 abs((ma40 - ma4)) > 7 커야지 포지션 진입
// position = 0 // 포지션이 없을 때만 진입

// 2. 
// (ta.crossover(ma4, ma30) : ma4가 ma30을 치고 올라갔을 때
// diffMa40_12 > conDiffMa40_12 : 횡보 확인을 위해서 abs((ma40 - ma4)) > 7 커야지 포지션 진입
// position = 0 // 포지션이 없을 때만 진입

isLong = (((ma4 > ma30) and (close > longTarget)) and diffMa40_12 > conDiffMa40_12 and position == 0) or (ta.crossover(ma4, ma30) and diffMa40_12 > conDiffMa40_12 and position == 0)

// 숏 조건 : 
// 1. 
// ma4 < ma30 : 주기가 긴 EMA가 더 위에 있을 때
// close < shortTarget : 현재 코인의 가격이 shortTarget(변동성 돌파전략으로 구한 타겟)보다 아래에 있을 때
// diffMa40_12 > conDiffMa40_12 : 횡보 확인을 위해서 abs((ma40 - ma4)) > 7 커야지 포지션 진입
// position = 0 // 포지션이 없을 때만 진입

// 2. 
// (ta.crossover(ma4, ma30) : ma4가 ma30을 치고 내려갔을 때
// diffMa40_12 > conDiffMa40_12 : 횡보 확인을 위해서 abs((ma40 - ma4)) > 7 커야지 포지션 진입
// position = 0 // 포지션이 없을 때만 진입
isShort = (((ma4 < ma30) and (close < shortTarget)) and diffMa40_12 > conDiffMa40_12 and position == 0) or (ta.crossunder(ma4, ma30) and diffMa40_12 > conDiffMa40_12 and position == 0)
 
// 진입가격 설정 
var entryPrice = close
plot(entryPrice, color = color.white)

// 0.008 : 0.8% 
// 선물거래 시장가 수수료 0.04 * 2 = 0.08%

// 포지션 청산
// 롱 포지션 청산
// 익절 : 0.8% 상승시 청산
// 손절 : 1.6% 하락시 청산

// 숏 포지션 청산
// 익절 : 0.8% 하락시 청산
// 손절 : 1.6% 상승시 청산
isEndLong = ((entryPrice + entryPrice * profit < close and position == 1) or (entryPrice - entryPrice * loss > close and position == 1)) or (ta.crossunder(ma4, ma30) and conDiffMa40_12 > conDiffMa40_12 and position == 1)
isEndShort = ((entryPrice - entryPrice * profit > close and position == 2) or (entryPrice + entryPrice * loss < close and position == 2)) or (ta.crossover(ma4, ma30) and conDiffMa40_12 > conDiffMa40_12 and position == 2)

if isLong
    entryPrice := close
    position := 1
    strategy.entry("롱", strategy.long)
if isEndLong
    position := 0
    // plot(entryPrice, color = color.orange)
    strategy.close("롱")

if isShort
    entryPrice := close
    position := 2
    strategy.entry("숏", strategy.short)
if isEndShort
    position := 0
    strategy.close("숏")

